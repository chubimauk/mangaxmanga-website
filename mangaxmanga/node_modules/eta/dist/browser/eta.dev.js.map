{"version":3,"file":"eta.dev.js","sources":["../../src/err.ts","../../src/utils.ts","../../src/parse.ts","../../src/compile-string.ts","../../src/storage.ts","../../src/containers.ts","../../src/config.ts","../../src/compile.ts","../../src/render.ts"],"sourcesContent":["function setPrototypeOf (obj: any, proto: any) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(obj, proto)\n  } else {\n    obj.__proto__ = proto\n  }\n}\n\nexport default function EtaErr (message: string): Error {\n  var err = new Error(message)\n  setPrototypeOf(err, EtaErr.prototype)\n  return err\n}\n\nEtaErr.prototype = Object.create(Error.prototype, {\n  name: { value: 'Eta Error', enumerable: false }\n})\n\n// TODO: Class transpilation adds a lot to the bundle size\n\nexport function ParseErr (message: string, str: string, indx: number) {\n  var whitespace = str.slice(0, indx).split(/\\n/)\n\n  var lineNo = whitespace.length\n  var colNo = whitespace[lineNo - 1].length + 1\n  message +=\n    ' at line ' +\n    lineNo +\n    ' col ' +\n    colNo +\n    ':\\n\\n' +\n    '  ' +\n    str.split(/\\n/)[lineNo - 1] +\n    '\\n' +\n    '  ' +\n    Array(colNo).join(' ') +\n    '^'\n  throw EtaErr(message)\n}\n","// TODO: allow '-' to trim up until newline. Use [^\\S\\n\\r] instead of \\s\n// TODO: only include trimLeft polyfill if not in ES6\n\n/* TYPES */\n\nimport { EtaConfig } from './config'\n\ninterface EscapeMap {\n  '&': '&amp;'\n  '<': '&lt;'\n  '>': '&gt;'\n  '\"': '&quot;'\n  \"'\": '&#39;'\n  [index: string]: string\n}\n\n/* END TYPES */\n\nexport var promiseImpl = new Function('return this;')().Promise\n\nexport function hasOwnProp (obj: object, prop: string) {\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n}\n\nexport function copyProps<T> (toObj: T, fromObj: T, notConfig?: boolean) {\n  for (var key in fromObj) {\n    if (hasOwnProp((fromObj as unknown) as object, key)) {\n      toObj[key] = fromObj[key]\n    }\n  }\n  return toObj\n}\n\nfunction trimWS (\n  str: string,\n  env: EtaConfig,\n  wsLeft: string | false,\n  wsRight?: string | false\n): string {\n  var leftTrim\n  var rightTrim\n\n  if (Array.isArray(env.autoTrim)) {\n    // kinda confusing\n    // but _}} will trim the left side of the following string\n    leftTrim = env.autoTrim[1]\n    rightTrim = env.autoTrim[0]\n  } else {\n    leftTrim = rightTrim = env.autoTrim\n  }\n\n  if (wsLeft || wsLeft === false) {\n    leftTrim = wsLeft\n  }\n\n  if (wsRight || wsRight === false) {\n    rightTrim = wsRight\n  }\n\n  if (!rightTrim && !leftTrim) {\n    return str\n  }\n\n  if (leftTrim === 'slurp' && rightTrim === 'slurp') {\n    return str.trim()\n  }\n\n  if (leftTrim === '_' || leftTrim === 'slurp') {\n    // console.log('trimming left' + leftTrim)\n    // full slurp\n\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!String.prototype.trimLeft) {\n      str = str.trimLeft()\n    } else {\n      str = str.replace(/^[\\s\\uFEFF\\xA0]+/, '')\n    }\n  } else if (leftTrim === '-' || leftTrim === 'nl') {\n    // console.log('trimming left nl' + leftTrim)\n    // nl trim\n    str = str.replace(/^(?:\\r\\n|\\n|\\r)/, '')\n  }\n\n  if (rightTrim === '_' || rightTrim === 'slurp') {\n    // console.log('trimming right' + rightTrim)\n    // full slurp\n\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!String.prototype.trimRight) {\n      str = str.trimRight()\n    } else {\n      str = str.replace(/[\\s\\uFEFF\\xA0]+$/, '')\n    }\n  } else if (rightTrim === '-' || rightTrim === 'nl') {\n    // console.log('trimming right nl' + rightTrim)\n    // nl trim\n    str = str.replace(/(?:\\r\\n|\\n|\\r)$/, '') // TODO: make sure this gets \\r\\n\n  }\n\n  return str\n}\n\nvar escMap: EscapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nfunction replaceChar (s: string): string {\n  return escMap[s]\n}\n\nfunction XMLEscape (str: any) {\n  // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n  var newStr = String(str)\n  if (/[&<>\"']/.test(newStr)) {\n    return newStr.replace(/[&<>\"']/g, replaceChar)\n  } else {\n    return newStr\n  }\n}\n\nexport { trimWS, XMLEscape }\n","import EtaErr, { ParseErr } from './err'\nimport { trimWS } from './utils'\n\n/* TYPES */\n\nimport { EtaConfig } from './config'\n\nexport type TagType = 'r' | 'e' | 'i' | ''\n\nexport interface TemplateObject {\n  t: TagType\n  val: string\n}\n\nexport type AstObject = string | TemplateObject\n\n/* END TYPES */\n\nvar templateLitReg = /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\\${)[^\\\\`])*`/g\n\nvar singleQuoteReg = /'(?:\\\\[\\s\\w\"'\\\\`]|[^\\n\\r'\\\\])*?'/g\n\nvar doubleQuoteReg = /\"(?:\\\\[\\s\\w\"'\\\\`]|[^\\n\\r\"\\\\])*?\"/g\n\nfunction escapeRegExp (string: string) {\n  // From MDN\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport default function parse (str: string, env: EtaConfig): Array<AstObject> {\n  var buffer: Array<AstObject> = []\n  var trimLeftOfNextStr: string | false = false\n  var lastIndex = 0\n  var parseOptions = env.parse\n\n  /* Adding for EJS compatibility */\n  if (env.rmWhitespace) {\n    // Code taken directly from EJS\n    // Have to use two separate replaces here as `^` and `$` operators don't\n    // work well with `\\r` and empty lines don't work well with the `m` flag.\n    // Essentially, this replaces the whitespace at the beginning and end of\n    // each line and removes multiple newlines.\n    str = str.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '')\n  }\n  /* End rmWhitespace option */\n\n  templateLitReg.lastIndex = 0\n  singleQuoteReg.lastIndex = 0\n  doubleQuoteReg.lastIndex = 0\n\n  function pushString (strng: string, shouldTrimRightOfString?: string | false) {\n    if (strng) {\n      // if string is truthy it must be of type 'string'\n\n      // TODO: benchmark replace( /(\\\\|')/g, '\\\\$1')\n      strng = trimWS(\n        strng,\n        env,\n        trimLeftOfNextStr, // this will only be false on the first str, the next ones will be null or undefined\n        shouldTrimRightOfString\n      )\n\n      if (strng) {\n        // replace \\ with \\\\, ' with \\'\n\n        strng = strng.replace(/\\\\|'/g, '\\\\$&').replace(/\\r\\n|\\n|\\r/g, '\\\\n')\n        // we're going to convert all CRLF to LF so it doesn't take more than one replace\n\n        buffer.push(strng)\n      }\n    }\n  }\n\n  var prefixes = [parseOptions.exec, parseOptions.interpolate, parseOptions.raw].reduce(function (\n    accumulator,\n    prefix\n  ) {\n    if (accumulator && prefix) {\n      return accumulator + '|' + escapeRegExp(prefix)\n    } else if (prefix) {\n      // accumulator is falsy\n      return escapeRegExp(prefix)\n    } else {\n      // prefix and accumulator are both falsy\n      return accumulator\n    }\n  },\n  '')\n\n  var parseOpenReg = new RegExp(\n    '([^]*?)' + escapeRegExp(env.tags[0]) + '(-|_)?\\\\s*(' + prefixes + ')?\\\\s*',\n    'g'\n  )\n\n  var parseCloseReg = new RegExp('\\'|\"|`|\\\\/\\\\*|(\\\\s*(-|_)?' + escapeRegExp(env.tags[1]) + ')', 'g')\n  // TODO: benchmark having the \\s* on either side vs using str.trim()\n\n  var m\n\n  while ((m = parseOpenReg.exec(str))) {\n    // TODO: check if above needs exec(str) !== null. Don't think it's possible to have 0-width matches but...\n    lastIndex = m[0].length + m.index\n\n    var precedingString = m[1]\n    var wsLeft = m[2]\n    var prefix = m[3] || '' // by default either ~, =, or empty\n\n    pushString(precedingString, wsLeft)\n\n    parseCloseReg.lastIndex = lastIndex\n    var closeTag\n    var currentObj: AstObject | false = false\n\n    while ((closeTag = parseCloseReg.exec(str))) {\n      if (closeTag[1]) {\n        var content = str.slice(lastIndex, closeTag.index)\n\n        parseOpenReg.lastIndex = lastIndex = parseCloseReg.lastIndex\n\n        trimLeftOfNextStr = closeTag[2]\n\n        var currentType: TagType = ''\n        if (prefix === parseOptions.exec) {\n          currentType = 'e'\n        } else if (prefix === parseOptions.raw) {\n          currentType = 'r'\n        } else if (prefix === parseOptions.interpolate) {\n          currentType = 'i'\n        }\n\n        currentObj = { t: currentType, val: content }\n        break\n      } else {\n        var char = closeTag[0]\n        if (char === '/*') {\n          var commentCloseInd = str.indexOf('*/', parseCloseReg.lastIndex)\n\n          if (commentCloseInd === -1) {\n            ParseErr('unclosed comment', str, closeTag.index)\n          }\n          parseCloseReg.lastIndex = commentCloseInd\n        } else if (char === \"'\") {\n          singleQuoteReg.lastIndex = closeTag.index\n\n          var singleQuoteMatch = singleQuoteReg.exec(str)\n          if (singleQuoteMatch) {\n            parseCloseReg.lastIndex = singleQuoteReg.lastIndex\n          } else {\n            ParseErr('unclosed string', str, closeTag.index)\n          }\n        } else if (char === '\"') {\n          doubleQuoteReg.lastIndex = closeTag.index\n          var doubleQuoteMatch = doubleQuoteReg.exec(str)\n\n          if (doubleQuoteMatch) {\n            parseCloseReg.lastIndex = doubleQuoteReg.lastIndex\n          } else {\n            ParseErr('unclosed string', str, closeTag.index)\n          }\n        } else if (char === '`') {\n          templateLitReg.lastIndex = closeTag.index\n          var templateLitMatch = templateLitReg.exec(str)\n          if (templateLitMatch) {\n            parseCloseReg.lastIndex = templateLitReg.lastIndex\n          } else {\n            ParseErr('unclosed string', str, closeTag.index)\n          }\n        }\n      }\n    }\n    if (currentObj) {\n      buffer.push(currentObj)\n    } else {\n      ParseErr('unclosed tag', str, m.index + precedingString.length)\n    }\n  }\n\n  pushString(str.slice(lastIndex, str.length), false)\n\n  if (env.plugins) {\n    for (var i = 0; i < env.plugins.length; i++) {\n      var plugin = env.plugins[i]\n      if (plugin.processAST) {\n        buffer = plugin.processAST(buffer, env)\n      }\n    }\n  }\n\n  return buffer\n}\n","import Parse from './parse'\n\n/* TYPES */\n\nimport { EtaConfig } from './config'\nimport { AstObject } from './parse'\n\n/* END TYPES */\n\nexport default function compileToString (str: string, env: EtaConfig) {\n  var buffer: Array<AstObject> = Parse(str, env)\n\n  var res =\n    \"var tR='';\" +\n    (env.useWith ? 'with(' + env.varName + '||{}){' : '') +\n    compileScope(buffer, env) +\n    'if(cb){cb(null,tR)} return tR' +\n    (env.useWith ? '}' : '')\n\n  if (env.plugins) {\n    for (var i = 0; i < env.plugins.length; i++) {\n      var plugin = env.plugins[i]\n      if (plugin.processFnString) {\n        res = plugin.processFnString(res, env)\n      }\n    }\n  }\n\n  return res\n\n  // TODO: is `return cb()` necessary, or could we just do `cb()`\n}\n\nfunction compileScope (buff: Array<AstObject>, env: EtaConfig) {\n  var i = 0\n  var buffLength = buff.length\n  var returnStr = ''\n\n  for (i; i < buffLength; i++) {\n    var currentBlock = buff[i]\n    if (typeof currentBlock === 'string') {\n      var str = currentBlock\n\n      // we know string exists\n      returnStr += \"tR+='\" + str + \"';\"\n    } else {\n      var type = currentBlock.t // ~, s, !, ?, r\n      var content = currentBlock.val || ''\n\n      if (type === 'r') {\n        // raw\n        returnStr += 'tR+=' + content + ';'\n      } else if (type === 'i') {\n        // interpolate\n        if (env.autoEscape) {\n          content = 'E.e(' + content + ')'\n        }\n        returnStr += 'tR+=' + content + ';'\n        // reference\n      } else if (type === 'e') {\n        // execute\n        returnStr += content + '\\n' // you need a \\n in case you have <% } %>\n      }\n    }\n  }\n\n  return returnStr\n}\n","import { copyProps } from './utils'\n\n/* TYPES */\n\ninterface Dict<T> {\n  // Basically, an object where all keys point to a value of the same type\n  [key: string]: T\n}\n\n/* END TYPES */\n\nclass Cacher<T> {\n  constructor (private cache: Dict<T>) {}\n  define (key: string, val: T) {\n    this.cache[key] = val\n  }\n  get (key: string) {\n    // string | array.\n    // TODO: allow array of keys to look down\n    // TODO: create plugin to allow referencing helpers, filters with dot notation\n    return this.cache[key]\n  }\n  remove (key: string) {\n    delete this.cache[key]\n  }\n  reset () {\n    this.cache = {}\n  }\n  load (cacheObj: Dict<T>) {\n    // TODO: this will err with deep objects and `storage` or `plugins` keys.\n    // Update Feb 26: EDITED so it shouldn't err\n    copyProps(this.cache, cacheObj, true)\n  }\n}\n\nexport { Cacher }\n","import { Cacher } from './storage'\nimport EtaErr from './err'\n\n/* TYPES */\n\nimport { EtaConfig } from './config'\nimport { TemplateFunction } from './compile'\n\n/* END TYPES */\n\nvar templates = new Cacher<TemplateFunction>({})\n\n/* ASYNC LOOP FNs */\n\nexport { templates }\n","import { templates } from './containers'\nimport { copyProps, XMLEscape } from './utils'\nimport EtaErr from './err'\n\n/* TYPES */\n\nimport { TemplateFunction } from './compile'\nimport { Cacher } from './storage'\n\ntype trimConfig = 'nl' | 'slurp' | false\n\nexport interface EtaConfig {\n  varName: string\n  autoTrim: trimConfig | [trimConfig, trimConfig]\n  rmWhitespace: boolean\n  autoEscape: boolean\n  tags: [string, string]\n  parse: {\n    interpolate: string\n    raw: string\n    exec: string\n  }\n  e: (str: string) => string\n  plugins: Array<{ processFnString?: Function; processAST?: Function }>\n  async: boolean\n  templates: Cacher<TemplateFunction>\n  cache: boolean\n  views?: string | Array<string>\n  root?: string\n  filename?: string\n  name?: string\n  'view cache'?: boolean\n  useWith?: boolean\n  [index: string]: any\n}\n\nexport type PartialConfig = {\n  [P in keyof EtaConfig]?: EtaConfig[P]\n}\n\n/* END TYPES */\n\nfunction includeHelper (this: EtaConfig, templateNameOrPath: string, data: object): string {\n  var template = this.templates.get(templateNameOrPath)\n  if (!template) {\n    throw EtaErr('Could not fetch template \"' + templateNameOrPath + '\"')\n  }\n  return template(data, this)\n}\n\nvar defaultConfig: EtaConfig = {\n  varName: 'it',\n  autoTrim: [false, 'nl'],\n  rmWhitespace: false,\n  autoEscape: true,\n  tags: ['<%', '%>'],\n  parse: {\n    interpolate: '=',\n    raw: '~',\n    exec: ''\n  },\n  async: false,\n  templates: templates,\n  cache: false,\n  plugins: [],\n  useWith: false,\n  e: XMLEscape,\n  include: includeHelper\n}\n\nincludeHelper.bind(defaultConfig)\n\nfunction getConfig (override: PartialConfig, baseConfig?: EtaConfig): EtaConfig {\n  // TODO: run more tests on this\n\n  var res: PartialConfig = {} // Linked\n  copyProps(res, defaultConfig) // Creates deep clone of defaultConfig, 1 layer deep\n\n  if (baseConfig) {\n    copyProps(res, baseConfig)\n  }\n\n  if (override) {\n    copyProps(res, override)\n  }\n\n  return res as EtaConfig\n}\n\nexport { defaultConfig, getConfig }\n","import compileToString from './compile-string'\nimport { getConfig } from './config'\nimport EtaErr from './err'\n\n/* TYPES */\n\nimport { EtaConfig, PartialConfig } from './config'\nimport { CallbackFn } from './file-handlers'\nexport type TemplateFunction = (data: object, config: EtaConfig, cb?: CallbackFn) => string\n\n/* END TYPES */\n\nexport default function compile (str: string, env?: PartialConfig): TemplateFunction {\n  var options: EtaConfig = getConfig(env || {})\n  var ctor // constructor\n\n  /* ASYNC HANDLING */\n  // The below code is modified from mde/ejs. All credit should go to them.\n  if (options.async) {\n    // Have to use generated function for this, since in envs without support,\n    // it breaks in parsing\n    try {\n      ctor = new Function('return (async function(){}).constructor;')()\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        throw EtaErr(\"This environment doesn't support async/await\")\n      } else {\n        throw e\n      }\n    }\n  } else {\n    ctor = Function\n  }\n  /* END ASYNC HANDLING */\n  try {\n    return new ctor(\n      options.varName,\n      'E', // EtaConfig\n      'cb', // optional callback\n      compileToString(str, options)\n    ) as TemplateFunction // eslint-disable-line no-new-func\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw EtaErr(\n        'Bad template syntax\\n\\n' +\n          e.message +\n          '\\n' +\n          Array(e.message.length + 1).join('=') +\n          '\\n' +\n          compileToString(str, options)\n      )\n    } else {\n      throw e\n    }\n  }\n}\n","import compile from './compile'\nimport { getConfig } from './config'\nimport { promiseImpl } from './utils'\nimport EtaErr from './err'\n\n/* TYPES */\n\nimport { EtaConfig, PartialConfig } from './config'\nimport { TemplateFunction } from './compile'\nimport { CallbackFn } from './file-handlers'\n\n/* END TYPES */\n\nfunction handleCache (template: string | TemplateFunction, options: EtaConfig): TemplateFunction {\n  var templateFunc\n\n  if (options.cache && options.name && options.templates.get(options.name)) {\n    return options.templates.get(options.name)\n  }\n\n  if (typeof template === 'function') {\n    templateFunc = template\n  } else {\n    templateFunc = compile(template, options)\n  }\n\n  if (options.cache && options.name) {\n    options.templates.define(options.name, templateFunc)\n  }\n\n  return templateFunc\n}\n\nexport default function render (\n  template: string | TemplateFunction,\n  data: object,\n  env?: PartialConfig,\n  cb?: CallbackFn\n) {\n  var options = getConfig(env || {})\n\n  if (options.async) {\n    var result\n    if (!cb) {\n      // No callback, try returning a promise\n      if (typeof promiseImpl === 'function') {\n        return new promiseImpl(function (resolve: Function, reject: Function) {\n          try {\n            result = handleCache(template, options)(data, options)\n            resolve(result)\n          } catch (err) {\n            reject(err)\n          }\n        })\n      } else {\n        throw EtaErr(\"Please provide a callback function, this env doesn't support Promises\")\n      }\n    } else {\n      try {\n        handleCache(template, options)(data, options, cb)\n      } catch (err) {\n        return cb(err)\n      }\n    }\n  } else {\n    return handleCache(template, options)(data, options)\n  }\n}\n"],"names":["Parse"],"mappings":"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"}