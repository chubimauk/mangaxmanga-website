/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
export declare type DocsVersion = string | null;
export interface MetadataOptions {
    routeBasePath: string;
    homePageId?: string;
    editUrl?: string;
    showLastUpdateTime?: boolean;
    showLastUpdateAuthor?: boolean;
}
export interface PathOptions {
    path: string;
    sidebarPath: string;
}
export interface PluginOptions extends MetadataOptions, PathOptions {
    id?: string;
    include: string[];
    docLayoutComponent: string;
    docItemComponent: string;
    remarkPlugins: ([Function, object] | Function)[];
    rehypePlugins: string[];
    admonitions: any;
    disableVersioning: boolean;
    excludeNextVersionDocs: boolean;
}
export declare type SidebarItemDoc = {
    type: 'doc' | 'ref';
    id: string;
};
export interface SidebarItemLink {
    type: 'link';
    href: string;
    label: string;
}
export interface SidebarItemCategory {
    type: 'category';
    label: string;
    items: SidebarItem[];
    collapsed: boolean;
}
export interface SidebarItemCategoryRaw {
    type: 'category';
    label: string;
    items: SidebarItemRaw[];
    collapsed?: boolean;
}
export declare type SidebarItem = SidebarItemDoc | SidebarItemLink | SidebarItemCategory;
export declare type SidebarItemRaw = string | SidebarCategoryShorthandRaw | SidebarItemDoc | SidebarItemLink | SidebarItemCategoryRaw | {
    type: string;
    [key: string]: unknown;
};
export interface SidebarCategoryShorthandRaw {
    [sidebarCategory: string]: SidebarItemRaw[];
}
export interface SidebarRaw {
    [sidebarId: string]: SidebarCategoryShorthandRaw | SidebarItemRaw[];
}
export interface Sidebar {
    [sidebarId: string]: SidebarItem[];
}
export interface DocsSidebarItemCategory {
    type: 'category';
    label: string;
    items: DocsSidebarItem[];
    collapsed?: boolean;
}
export declare type DocsSidebarItem = SidebarItemLink | DocsSidebarItemCategory;
export interface DocsSidebar {
    [sidebarId: string]: DocsSidebarItem[];
}
export interface OrderMetadata {
    previous?: string;
    next?: string;
    sidebar?: string;
}
export interface Order {
    [id: string]: OrderMetadata;
}
export interface LastUpdateData {
    lastUpdatedAt?: number;
    lastUpdatedBy?: string;
}
export interface MetadataRaw extends LastUpdateData {
    unversionedId: string;
    id: string;
    isDocsHomePage: boolean;
    title: string;
    description: string;
    source: string;
    permalink: string;
    sidebar_label?: string;
    editUrl?: string | null;
    version?: string;
}
export interface Paginator {
    title: string;
    permalink: string;
}
export interface Metadata extends MetadataRaw {
    sidebar?: string;
    previous?: Paginator;
    next?: Paginator;
}
export interface DocsMetadata {
    [id: string]: Metadata;
}
export interface DocsMetadataRaw {
    [id: string]: MetadataRaw;
}
export interface SourceToPermalink {
    [source: string]: string;
}
export interface PermalinkToSidebar {
    [permalink: string]: string;
}
export interface VersionToSidebars {
    [version: string]: Set<string>;
}
export interface LoadedContent {
    docsMetadata: DocsMetadata;
    docsDir: string;
    docsSidebars: DocsSidebar;
    permalinkToSidebar: PermalinkToSidebar;
    versionToSidebars: VersionToSidebars;
}
export declare type DocsBaseMetadata = Pick<LoadedContent, 'docsSidebars' | 'permalinkToSidebar'> & {
    version: string | null;
};
export declare type VersioningEnv = {
    enabled: boolean;
    latestVersion: string | null;
    versions: string[];
    docsDir: string;
    sidebarsDir: string;
};
export interface Env {
    versioning: VersioningEnv;
}
export declare type GlobalDoc = {
    id: string;
    path: string;
};
export declare type GlobalVersion = {
    name: DocsVersion;
    path: string;
    mainDocId: string;
    docs: GlobalDoc[];
};
export declare type GlobalPluginData = {
    path: string;
    latestVersionName: DocsVersion;
    versions: GlobalVersion[];
};
//# sourceMappingURL=types.d.ts.map